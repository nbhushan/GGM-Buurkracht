### Linear SEM
require(pcalg)
require(lavaan)
require(qgraph)
require(RColorBrewer)
require(CompareCausalNetworks)


rm(list = ls())

load("BuurkrachtScales.Rdata")

#GGM
corScales <- cor_auto(Scales, ordinalLevelMax = 5)
rownames(corScales) <- gsub("_", " ", rownames(corScales))
colnames(corScales) <- gsub("_", " ", colnames(corScales))


g1 <- "Personal factors"
g2 <- "Factors related to the social context"
g3 <- "Opinions on energy companies and governance"
g4 <- "Membership"
g5 <- "Sustainable energy intentions and behaviours"
g6 <- "Socio-demographics"


grp <- list(
  `Values` = c(1:4),
  `Personal factors` = c(5:6),
  `Sustainable energy intentions and behaviours` = c(7:9)
)

ScalesPersonal <- Scales[, c(1:6, 23, 25, 26)]
boxplot.matrix(as.matrix(ScalesPersonal))

# apply PC algorithm
pc.fit <- pc(
  suffStat = list(
    C = cor_auto(ScalesPersonal,
                 ordinalLevelMax = 5),
    n = nrow(ScalesPersonal)
  ),
  indepTest = gaussCItest,
  labels = names(ScalesPersonal),
  alpha = 0.01
)


#ESS Data
#### Load standardized data ####
MyData         <- readRDS("HandledData.rds")
longnames      <- readRDS("longnames.rds")
gr             <- readRDS("gr.rds")
namesRelabeled <- readRDS("namesRelabeled.rds")
MyData$countryLong <- NULL
MyData$country <- NULL

MyData2 <- MyData[!is.na(MyData)]
MyData2 <- na.omit(MyData)


# apply LiNGAM
ESS.lingam.fit <- lingam(MyData2, verbose = TRUE)
ESS.lingam.fit.B <- t(round(ESS.lingam.fit$B, 3))

#Apply PC
# apply PC algorithm
ESS.pc.fit <- pc(
  suffStat = list(
    C = cor_auto(MyData2,
                 ordinalLevelMax = 5),
    n = nrow(MyData2)
  ),
  indepTest = gaussCItest,
  labels = longnames,
  alpha = 0.01
)



# PC does not require Gaussian noise.

# apply LiNGAM
lingam.fit <- lingam(ScalesPersonal, verbose = TRUE)
round(lingam.fit$B, 3)
Xw <- 1 * (lingam.fit$Bpruned != 0.0)

#compare causal networks
CCN_lingam <-
  getParents(
    ScalesPersonal,
    environment = NULL,
    #nodewise = TRUE,
    #EV=2,
    #nsim = 100,
    onlyObservationalData = TRUE,
    method = c("LINGAM"),
    verbose = TRUE,
    pointConf = TRUE
  )

ESS.lingam.stable <-
  getParentsStable(
    MyData2,
    environment = NULL,
    nodewise = FALSE,
    #EV=2,
    nsim = 50,
    onlyObservationalData = TRUE,
    method = c("LINGAM"),
    verbose = TRUE,
    mode = "raw",
    #pointConf=TRUE,
    setOptions = list(prunefactor = 5) 
  )




col_scales <- brewer.pal(length(gr), name = "Accent")

par(mfrow = c(1, 3))
# plot estimated CPDAG
pcalgDAG <-
  qgraph(
    pc.fit,
    layout = "spring",
    labels = TRUE,
    nodeNames = gsub("_", " ", colnames(ScalesPersonal)),
    legend.cex = 0.4,
    groups = grp,
    legend.mode = "style1",
    palette = "ggplot2", 
    vsize = 3.8,
    layoutOffset = c(0, 0),
    GLratio = 1.0,
    filename = "PCbuur",
    filetype = "pdf",
    title = "PC"
  )


ESS.lingam.DAG <-
  qgraph(
    ESS.lingam.fit.B,
    layout = "spring",
    #layout = pcalgDAG$layout,
    labels = namesRelabeled,
    nodeNames = longnames,
    legend.cex = 0.3,
    groups = gr,
    palette = "ggplot2", 
    #vsize = 3.8,
    legend = TRUE,
    #minimum=0.1,
    legend.mode = "style1",
    vsize = 4.8,
    layoutOffset = c(-.2, 0),
    #GLratio=1.0,
    filename = "LingamESS",
    filetype = "pdf",
    minimum = 0.1
  )


ESS.lingam.DAG.stable <-
  qgraph(
    ESS.lingam.stable,
    layout = lingamDAG$layout,
    #layout = pcalgDAG$layout,
    labels = namesRelabeled,
    nodeNames = longnames,
    legend.cex = 0.3,
    groups = gr,
    palette = "ggplot2", 
    #vsize = 3.8,
    legend = TRUE,
    #minimum=0.1,
    legend.mode = "style1",
    vsize = 4.8,
    layoutOffset = c(-.2, 0),
    #GLratio=1.0,
    filename = "LingamESSstable",
    filetype = "pdf",
    minimum = 0.1
  )

ESS.PC.DAG <-
  qgraph(
    ESS.pc.fit,
    layout = ESS.lingam.DAG$layout,
    #layout = pcalgDAG$layout,
    labels = namesRelabeled,
    nodeNames = longnames,
    legend.cex = 0.3,
    groups = gr,
    palette = "ggplot2", 
    #vsize = 3.8,
    legend = TRUE,
    #minimum=0.1,
    legend.mode = "style1",
    vsize = 4.8,
    layoutOffset = c(-.2, 0),
    #GLratio=1.0,
    filename = "PCESS",
    filetype = "pdf",
    minimum = 0.1
  )



GGMbuur <- qgraph(
  cor_auto(ScalesPersonal,
           ordinalLevelMax = 5),
  graph = "glasso",
  layout = pcalgDAG$layout,
  labels = TRUE,
  sampleSize = nrow(ScalesPersonal),
  nodeNames = gsub("_", " ", colnames(ScalesPersonal)),
  groups = grp,
  color = col_scales,
  #vsize = 3.8,
  legend = FALSE,
  minimum = 0.01,
  #legend.mode = "style1",
  #legend.cex = 0.8,
  vsize = 5.8,
  #layoutOffset = c(-.2,0)
  #GLratio=1.0,
  filename = "GGM",
  filetype = "pdf",
  title = "GGM"
)

dev.off()
