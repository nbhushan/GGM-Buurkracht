edge.label.cex = 0.4,
edge.label.bg = TRUE,
edge.label.position = 0.5,
weighted = FALSE,
layoutOffset = c(-.2, 0),
#GLratio=1.0,
filename = "buurPC_stabilitySelectionNodewise",
filetype = "pdf"
#minimum = 0.9
)
buur.lingam.fit[1:45]
useSamplestest <- sort(sample(c(1:nrow(Scales2)), round(length(c(1:nrow(Scales2))*0.7)))
)
sort(sample(1:313, round(length(1:313)*0.7)))
sample(1:10,7)
length(sort(sample(1:313, round(length(1:313)*0.7))))
#LINGAM
buur.lingam.stable <-
getParentsStable(
Scales2,
threshold = 0.75,
environment = NULL,
nodewise = T,
sampleObservations = 0.5,
EV = 2,
nsim = 50,
onlyObservationalData = TRUE,
method = c("LINGAM"),
setOptions = list(pointconf=FALSE),
verbose = FALSE
)
range(buur.lingam.stable)
sum(as.logical(buur.lingam.stable))
sqrt(2*(2*0.75-1))
sqrt(10*(2*0.75-1))
sqrt(15*(2*0.75-1))
buur.lingam.stable <-
getParentsStable(
Scales2,
threshold = 0.75,
environment = NULL,
nodewise = T,
sampleObservations = 0.5,
EV = 15,
nsim = 50,
onlyObservationalData = TRUE,
method = c("LINGAM"),
setOptions = list(pointconf=FALSE),
verbose = FALSE
)
range(buur.lingam.stable)
sum(as.logical(buur.lingam.stable))
buur.lingam.stable <-
getParentsStable(
Scales2,
threshold = 0.75,
environment = NULL,
nodewise = T,
sampleObservations = 0.5,
EV = 30,
nsim = 50,
onlyObservationalData = TRUE,
method = c("LINGAM"),
setOptions = list(pointconf=FALSE),
verbose = FALSE
)
range(buur.lingam.stable)
sum(as.logical(buur.lingam.stable))
sqrt(2*(2*0.75-1)*(32^2-32))
(32^2-32)
sqrt(2*(2*0.95-1)*(32^2-32))
sqrt(2*(2*0.75-1)*(32^2-32))
sqrt(500*(2*0.75-1)*(32^2-32))
sqrt(1*(2*0.75-1)*(32^2-32))
buur.lingam.stable <-
getParentsStable(
Scales2,
threshold = 0.75,
environment = NULL,
nodewise = F,
sampleObservations = 0.5,
EV = 1,
nsim = 50,
onlyObservationalData = TRUE,
method = c("LINGAM"),
setOptions = list(pointconf=FALSE),
verbose = FALSE
)
range(buur.lingam.stable)
sum(as.logical(buur.lingam.stable))
#LINGAM
buur.lingam.stable <-
getParentsStable(
Scales2,
threshold = 0.75,
environment = NULL,
nodewise = F,
sampleObservations = 0.7,
EV = 0.1,
nsim = 50,
onlyObservationalData = TRUE,
method = c("LINGAM"),
setOptions = list(pointconf=FALSE),
verbose = FALSE
)
range(buur.lingam.stable)
sum(as.logical(buur.lingam.stable))
buur.pc.stable <-
getParentsStable(
Scales2,
threshold = 0.75,
environment = NULL,
sampleObservations = 0.7,
nodewise = T,
EV = 2,
nsim = 50,
onlyObservationalData = TRUE,
method = c("pc"),
verbose = FALSE
)
range(buur.pc.stable)
sum(as.logical(buur.pc.stable))
buur.pc.stable <-
getParentsStable(
Scales2,
threshold = 0.75,
environment = NULL,
sampleObservations = 0.7,
nodewise = T,
EV = 2,
nsim = 100,
onlyObservationalData = TRUE,
method = c("pc"),
verbose = FALSE
)
range(buur.pc.stable)
sum(as.logical(buur.pc.stable))
buur.CCN.PC.stable.qgraph <-
qgraph(
buur.pc.stable,
layout = "spring",
labels = TRUE,
nodeNames = gsub("_", " ", colnames(Scales)),
legend.cex = 0.3,
groups = buur_groups,
palette = "ggplot2",
legend = TRUE,
legend.mode = "style1",
legend.cex = 0.32,
vsize = 3.8,
edge.labels = FALSE,
edge.label.cex = 0.4,
edge.label.bg = TRUE,
edge.label.position = 0.5,
weighted = FALSE,
layoutOffset = c(-.2, 0),
#GLratio=1.0,
filename = "buurPC_stabilitySelection",
filetype = "pdf"
#minimum = 0.9
)
ESS.PC.stable <-
getParentsStable(
MyData2,
threshold = 0.75,
environment = NULL,
sampleObservations = 0.7,
nodewise = T,
EV = 2,
nsim = 100,
onlyObservationalData = TRUE,
method = c("pc"),
verbose = FALSE
)
#### Load standardized data ####
MyData         <- readRDS("HandledData.rds")
longnames      <- readRDS("longnames.rds")
gr             <- readRDS("gr.rds")
namesRelabeled <- readRDS("namesRelabeled.rds")
MyData$countryLong <- NULL
MyData$country <- NULL
MyData2 <- MyData[!is.na(MyData)]
MyData2 <- na.omit(MyData)
ESS.lingam.stable <-
getParentsStable(
MyData2,
threshold = 0.75,
environment = NULL,
sampleObservations = 0.7,
nodewise = T,
EV = 2,
nsim = 100,
onlyObservationalData = TRUE,
method = c("LINGAM"),
verbose = FALSE
)
#plot ESS Lingam
ESS.lingam.qgraph <-
qgraph(
ESS.lingam.fit,
layout = "spring",
labels = namesRelabeled,
nodeNames = longnames,
legend.cex = 0.3,
groups = gr,
palette = "ggplot2",
legend = TRUE,
legend.mode = "style1",
legend.cex = 0.32,
vsize = 3.8,
edge.labels = FALSE,
edge.label.cex = 0.4,
edge.label.bg = TRUE,
edge.label.position = 0.5,
weighted = FALSE,
layoutOffset = c(-.2, 0),
filename = "ESS_LINGAM",
filetype = "pdf",
minimum = 0.1
)
#plot ESS Lingam
ESS.lingam.qgraph <-
qgraph(
ESS.lingam.stable,
layout = "spring",
labels = namesRelabeled,
nodeNames = longnames,
legend.cex = 0.3,
groups = gr,
palette = "ggplot2",
legend = TRUE,
legend.mode = "style1",
legend.cex = 0.32,
vsize = 3.8,
edge.labels = FALSE,
edge.label.cex = 0.4,
edge.label.bg = TRUE,
edge.label.position = 0.5,
weighted = FALSE,
layoutOffset = c(-.2, 0),
filename = "ESS_LINGAM",
filetype = "pdf",
minimum = 0.1
)
range(ESS.lingam.stable)
View(ESS.lingam.stable)
#plot ESS Lingam
ESS.lingam.qgraph <-
qgraph(
ESS.lingam.stable,
layout = "spring",
labels = namesRelabeled,
nodeNames = longnames,
legend.cex = 0.3,
groups = gr,
palette = "ggplot2",
legend = TRUE,
legend.mode = "style1",
legend.cex = 0.32,
vsize = 3.8,
edge.labels = FALSE,
edge.label.cex = 0.4,
edge.label.bg = TRUE,
edge.label.position = 0.5,
weighted = FALSE,
layoutOffset = c(-.2, 0),
filename = "ESS_LINGAM",
filetype = "pdf",
minimum = 99
)
#plot ESS Lingam
ESS.lingam.qgraph <-
qgraph(
ESS.lingam.stable,
layout = "spring",
labels = namesRelabeled,
nodeNames = longnames,
legend.cex = 0.3,
groups = gr,
palette = "ggplot2",
legend = TRUE,
legend.mode = "style1",
legend.cex = 0.32,
vsize = 3.8,
edge.labels = FALSE,
edge.label.cex = 0.4,
edge.label.bg = TRUE,
edge.label.position = 0.5,
weighted = FALSE,
layoutOffset = c(-.2, 0),
filename = "ESS_LINGAM",
filetype = "pdf",
minimum = 99
)
#plot ESS Lingam
ESS.lingam.qgraph <-
qgraph(
ESS.lingam.stable,
layout = "spring",
labels = namesRelabeled,
nodeNames = longnames,
legend.cex = 0.3,
groups = gr,
palette = "ggplot2",
legend = TRUE,
legend.mode = "style1",
legend.cex = 0.32,
vsize = 3.8,
edge.labels = FALSE,
edge.label.cex = 0.4,
edge.label.bg = TRUE,
edge.label.position = 0.5,
weighted = FALSE,
layoutOffset = c(-.2, 0),
filename = "ESS_LINGAM_stable",
filetype = "pdf",
minimum = 99
)
range(ESS.lingam.stable)
sum(as.logical(ESS.lingam.stable))
ESS.lingam.stable <-
getParentsStable(
MyData2,
threshold = 0.75,
environment = NULL,
sampleObservations = 0.7,
nodewise = T,
EV = 1,
nsim = 100,
onlyObservationalData = TRUE,
method = c("LINGAM"),
verbose = FALSE
)
range(ESS.lingam.stable)
sum(as.logical(ESS.lingam.stable))
ESS.PC.stable <-
getParentsStable(
MyData2,
threshold = 0.75,
environment = NULL,
sampleObservations = 0.7,
nodewise = T,
EV = 2,
nsim = 100,
onlyObservationalData = TRUE,
method = c("pc"),
verbose = FALSE
)
range(ESS.PC.stable)
sum(as.logical(ESS.PC.stable))
saveRDS(buur.pc.stable, "buur.pc.stable.RDS")
saveRDS(ESS.PC.stable, "ESS.pc.stable.RDS")
# TABLE OF CONTENTS
# 0. Prepare environment
# 1. Describe the study
# 2. Set up the study
#    2.1 Load the covariance matrices
#    2.2 Set up group names
# 3. Run the analysis on the item level
# 4. Run the analysis on the scale level
# 4. Run subgroup analysis
# 5. Save plots
#
# 0. Prepare environment ----
list.of.packages <- c("qgraph", "data.table", "RColorBrewer",
"SID", "xtable","dplyr","bootnet",
"rstudioapi")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages, repos = "http://cran.us.r-project.org")
require(qgraph)
require(data.table)
require(RColorBrewer)
require(SID)
require(xtable)
require(dplyr)
require(bootnet)
require(rstudioapi)
current_path <- getActiveDocumentContext()$path
setwd(dirname(current_path ))
rm(list=ls())
#sample size
N= 568
N_member = 303
N_nonmember = 265
# END SECTION
require(qgraph)
df <- data.frame(a = 1:10, b = 2:11, c = 3:12)
df
names(df)
df <- subset(df, select = -c(a, c))
df
names(df)
df <- data.frame(a = 1:10, b = 2:11, c = 3:12)
names(df)
names(df) <- c("jaha", "tom", "hett")
df
df <- subset(df, select = -c(jaha, hett))
df <- subset(df, select = -c(jaha, hett))
df <- subset(df, select = -c("jaha", "hett"))
df
df <- data.frame(a = 1:10, b = 2:11, c = 3:12)
df
df[-c("a", "c")]
df[-c(a, c)]
# 0. Prepare environment ----
list.of.packages <- c(
"qgraph",
"data.table",
"RColorBrewer",
"SID",
"xtable",
"dplyr",
"bootnet",
"rstudioapi"
)
new.packages <-
list.of.packages[!(list.of.packages %in%
installed.packages()[, "Package"])]
if (length(new.packages))
install.packages(new.packages,
repos = "http://cran.us.r-project.org")
#load packages
require(qgraph)
require(data.table)
require(RColorBrewer)
require(SID)
require(xtable)
require(dplyr)
require(bootnet)
require(rstudioapi)
#get the path to active Rstudio project
current_path <- getActiveDocumentContext()$path
#set wd to active path
setwd(dirname(current_path))
#clean up
rm(list = ls())
#sample size
#hardcode these variables as the data is not open
N = 568
N_member = 303
N_nonmember = 265
# END SECTION
#####################Relationship between items################################
load(file = "./correlationMatrices/ItemCorrelationMatrixFIML.Rdata") #load corItems
#groups items by colour (construct)
groups_items <- list(
`Altruistic values [1-4]` = c(1:4),
`Biospheric values [5-8]` = c(5:8),
`Egoistic values [9-13]` = c(9:13),
`Hedonic values [14-16]` = c(14:16),
`Environmental self-identity [17-19]` = c(17:19),
`Personal importance of sustainable energy behaviour [20-22]` = c(20:22),
`Need to belong [23]` = c(23),
`Need to be unique [24]` = c(24),
`Neighbourhood entitativity [25]` = c(25),
`Neighbourhood homogeneity [26-27]` = c(26:27),
`Neighbourhood interaction [28-29]` = c(28:29),
`Interaction with neighbours [30-31]` = c(30:31),
`Neighbourhood identification [32-35]` = c(32:35),
`Environmental neighbourhood identity [36-38]` = c(36:38),
`Neighbourhood importance of sustainable energy behaviour [39-41]` = c(39:41),
`Group-based anger [42-43]` = c(42:43),
`Group-based distrust [44-45]` = c(44:45),
`Membership [46]` = c(46),
`Overall energy savings [47]` = c(47),
`Thermostat temperature (°C) [48]` = c(48),
`Shower time (min) [49]` = c(49),
`Energy-efficient appliances [50]` = c(50),
`Energy-saving measures [51]` = c(51),
`Household sustainable energy intentions [52-56]` = c(52:56),
`Communal sustainable energy intentions [57-58]` = c(57:58),
`Initiative involvement intentions [59]` = c(59),
`Other pro-environmental intentions [60-62]` = c(60:62),
`Other commmunal intentions [63-64]` = c(63:64),
`Demographical variables [65-68]` = c(65:68)
)
#set up color scales
col_item <- rep(brewer.pal(length(groups_items), name = "Set3"), 3)
#display and save indicator graph
#sample size N = 568
glasso_item <-
qgraph(
corFIML,
layout = "spring",
graph = "glasso",
labels = TRUE,
sampleSize = N,
tuning = 0.5,
minimum = 0.1,
groups = groups_items,
legend.cex = 0.35,
layoutOffset = c(-.2, 0),
vsize = 3.0,
color = col_item,
filename = "Images/itemGGM",
filetype = "tiff"
)
install.packages("styler")
styler:::style_active_file()
unique(DT, by = 'V4')
require(data.table)
set.seed(1L)
## Create a data table
DT <- data.table(V1 = rep(c(1L, 2L), 5)[-10],
V2 = 1:9,
V3 = c(0.5, 1.0, 1.5),
V4 = rep(LETTERS[1:3], 3))
class(DT)
DT
unique(DT, by = 'V4')
Df <- DT[, .(sumV3=sum(V3)), by = "V4"]
Df
